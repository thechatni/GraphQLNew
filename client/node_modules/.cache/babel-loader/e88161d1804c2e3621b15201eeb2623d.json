{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\AddFleet.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_SUPPLIERS } from \"../gql/Queries\";\nimport { ADD_FLEET } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddFleet = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_SUPPLIERS);\n  const [suppliers, setSuppliers] = useState();\n  const [name, setName] = useState();\n  const [supplierId, setSupplierId] = useState();\n  const [addFleet] = useMutation(ADD_FLEET);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addFleet({\n      variables: {\n        name: name,\n        supplierId: supplierId\n      },\n      refetchQueries: [{\n        query: LOAD_SUPPLIERS,\n        variable\n      }]\n    });\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      setSuppliers(data.suppliers);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }, this) || /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"add-fleet\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fleet Owner Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name || \"\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Supplier:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setSupplierId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Supplier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), suppliers != undefined && suppliers.map((supplier, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: supplier.id,\n            children: supplier.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Fleet Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddFleet, \"IaQpePjW24ikIrRxezBDCXyRYx0=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AddFleet;\nexport default AddFleet;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFleet\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/AddFleet.js"],"names":["useQuery","useMutation","useEffect","useState","LOAD_SUPPLIERS","ADD_FLEET","AddFleet","error","loading","data","suppliers","setSuppliers","name","setName","supplierId","setSupplierId","addFleet","handleSubmit","e","preventDefault","variables","refetchQueries","query","variable","undefined","target","value","map","supplier","idx","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACI,cAAD,CAAzC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,EAA5C;AAEA,QAAM,CAACa,QAAD,IAAaf,WAAW,CAACI,SAAD,CAA9B;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,SAAS,EAAE;AACTR,QAAAA,IAAI,EAAEA,IADG;AAETE,QAAAA,UAAU,EAAEA;AAFH,OADJ;AAKPO,MAAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAElB,cAAT;AAAyBmB,QAAAA;AAAzB,OAAD;AALT,KAAD,CAAR;AAOD,GATD;;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAI,KAAKe,SAAb,EAAwB;AACtBb,MAAAA,YAAY,CAACF,IAAI,CAACC,SAAN,CAAZ;AACD;AACF,GAJQ,EAIN,CAACD,IAAD,CAJM,CAAT;AAKA,sBACE;AAAA,cACID,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,iBACC;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,QAAQ,EAAES,YAA/B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEL,IAAI,IAAI,EAFjB;AAGE,UAAA,QAAQ,EAAGM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGR,CAAD,IAAO;AACfH,YAAAA,aAAa,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CAAb;AACD,WAHH;AAAA,kCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGhB,SAAS,IAAIc,SAAb,IACCd,SAAS,CAACiB,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,kBACZ;AAAkB,YAAA,KAAK,EAAED,QAAQ,CAACE,EAAlC;AAAA,sBACGF,QAAQ,CAAChB;AADZ,aAAaiB,GAAb;AAAA;AAAA;AAAA;AAAA,kBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eA2BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA3DD;;GAAMvB,Q;UAC6BN,Q,EAKdC,W;;;KANfK,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_SUPPLIERS } from \"../gql/Queries\";\r\nimport { ADD_FLEET } from \"../gql/Mutations\";\r\n\r\nconst AddFleet = () => {\r\n  const { error, loading, data } = useQuery(LOAD_SUPPLIERS);\r\n  const [suppliers, setSuppliers] = useState();\r\n  const [name, setName] = useState();\r\n  const [supplierId, setSupplierId] = useState();\r\n\r\n  const [addFleet] = useMutation(ADD_FLEET);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addFleet({\r\n      variables: {\r\n        name: name,\r\n        supplierId: supplierId,\r\n      },\r\n      refetchQueries: [{ query: LOAD_SUPPLIERS, variable }],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setSuppliers(data.suppliers);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <div>\r\n      {(loading && <p>Loading...</p>) || (\r\n        <form id=\"add-fleet\" onSubmit={handleSubmit}>\r\n          <div className=\"field\">\r\n            <label>Fleet Owner Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name || \"\"}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Supplier:</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setSupplierId(e.target.value);\r\n              }}\r\n            >\r\n              <option>Select Supplier</option>\r\n              {suppliers != undefined &&\r\n                suppliers.map((supplier, idx) => (\r\n                  <option key={idx} value={supplier.id}>\r\n                    {supplier.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\">Add Fleet Owner</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddFleet;\r\n"]},"metadata":{},"sourceType":"module"}