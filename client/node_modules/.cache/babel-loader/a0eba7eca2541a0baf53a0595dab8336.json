{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\BookList.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_BOOKS } from \"../gql/Queries\";\nimport BookDetails from \"./BookDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_BOOKS);\n  const [books, setBooks] = useState();\n  const [selected, setSelected] = useState(\"null\");\n  useEffect(() => {\n    if (data !== undefined) {\n      setBooks(data.books);\n      console.log(data.books);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"An error occured...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), books != undefined && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map((book, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => setSelected(book.id),\n        children: book.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BookDetails, {\n      bookId: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookList, \"/jorm3FdDelbC4vXexGHYx0Mr7c=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/BookList.js"],"names":["useQuery","useEffect","useState","LOAD_BOOKS","BookDetails","BookList","error","loading","data","books","setBooks","selected","setSelected","undefined","console","log","map","book","idx","e","id","name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACG,UAAD,CAAzC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,MAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAI,KAAKK,SAAb,EAAwB;AACtBH,MAAAA,QAAQ,CAACF,IAAI,CAACC,KAAN,CAAR;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACC,KAAjB;AACD;AACF,GALQ,EAKN,CAACD,IAAD,CALM,CAAT;AAMA,sBACE;AAAA,eACGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGD,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFZ,EAIGG,KAAK,IAAII,SAAT,iBACC;AAAA,gBACGJ,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBACT;AAAc,QAAA,OAAO,EAAGC,CAAD,IAAOP,WAAW,CAACK,IAAI,CAACG,EAAN,CAAzC;AAAA,kBACGH,IAAI,CAACI;AADR,SAASH,GAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ,eAaE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;GAAMN,Q;UAC6BL,Q;;;KAD7BK,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_BOOKS } from \"../gql/Queries\";\r\nimport BookDetails from \"./BookDetails\";\r\n\r\nconst BookList = () => {\r\n  const { error, loading, data } = useQuery(LOAD_BOOKS);\r\n  const [books, setBooks] = useState();\r\n  const [selected, setSelected] = useState(\"null\");\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setBooks(data.books);\r\n      console.log(data.books);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <div>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>An error occured...</p>}\r\n\r\n      {books != undefined && (\r\n        <ul>\r\n          {books.map((book, idx) => (\r\n            <li key={idx} onClick={(e) => setSelected(book.id)}>\r\n              {book.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <BookDetails bookId={selected} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n"]},"metadata":{},"sourceType":"module"}