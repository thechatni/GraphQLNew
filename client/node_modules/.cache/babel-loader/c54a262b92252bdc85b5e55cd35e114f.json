{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\DeleteDriver.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_DRIVERS, GET_SUPPLIER } from \"../gql/Queries\";\nimport { DELETE_DRIVER } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteDriver = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_DRIVERS);\n  const [drivers, setDrivers] = useState();\n  const [driverId, setDriverId] = useState();\n  const [deleteDriver] = useMutation(DELETE_DRIVER);\n  useEffect(() => {\n    if (data !== undefined) {\n      setDrivers(data.drivers);\n    }\n  }, [data]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    deleteDriver({\n      variables: {\n        id: driverId\n      },\n      refetchQueries: [{\n        query: GET_SUPPLIER,\n        variables: {\n          id: props.supplierId\n        }\n      }, {\n        query: LOAD_DRIVERS\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Delete Driver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), drivers !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"del-driver\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Driver: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: true,\n            onChange: e => {\n              setDriverId(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select Driver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), drivers.map((driver, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: driver.id,\n              children: driver.name\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Delete Driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeleteDriver, \"bwSMM2Im2Cs/swz+LKxV6jjpt5g=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = DeleteDriver;\nexport default DeleteDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteDriver\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/DeleteDriver.js"],"names":["useQuery","useMutation","useEffect","useState","LOAD_DRIVERS","GET_SUPPLIER","DELETE_DRIVER","DeleteDriver","error","loading","data","drivers","setDrivers","driverId","setDriverId","deleteDriver","undefined","handleSubmit","e","preventDefault","variables","id","refetchQueries","query","props","supplierId","target","value","map","driver","idx","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,gBAA3C;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACI,YAAD,CAAzC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,YAAD,IAAiBd,WAAW,CAACK,aAAD,CAAlC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAI,KAAKM,SAAb,EAAwB;AACtBJ,MAAAA,UAAU,CAACF,IAAI,CAACC,OAAN,CAAV;AACD;AACF,GAJQ,EAIN,CAACD,IAAD,CAJM,CAAT;;AAMA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,YAAY,CAAC;AACXK,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAER;AADK,OADA;AAIXS,MAAAA,cAAc,EAAE,CACd;AAAEC,QAAAA,KAAK,EAAElB,YAAT;AAAuBe,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAEG,KAAK,CAACC;AAAZ;AAAlC,OADc,EAEd;AAAEF,QAAAA,KAAK,EAAEnB;AAAT,OAFc;AAJL,KAAD,CAAZ;AASD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGO,OAAO,KAAKK,SAAZ,iBACC;AAAA,6BACE;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,QAAQ,EAAEC,YAAhC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,QAAQ,EAAGC,CAAD,IAAO;AACfJ,cAAAA,WAAW,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAX;AACD,aAJH;AAAA,oCAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOGhB,OAAO,CAACiB,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,kBACX;AAAkB,cAAA,KAAK,EAAED,MAAM,CAACR,EAAhC;AAAA,wBACGQ,MAAM,CAACE;AADV,eAAaD,GAAb;AAAA;AAAA;AAAA;AAAA,oBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtDD;;GAAMvB,Y;UAC6BP,Q,EAGVC,W;;;KAJnBM,Y;AAwDN,eAAeA,YAAf","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_DRIVERS, GET_SUPPLIER } from \"../gql/Queries\";\r\nimport { DELETE_DRIVER } from \"../gql/Mutations\";\r\n\r\nconst DeleteDriver = () => {\r\n  const { error, loading, data } = useQuery(LOAD_DRIVERS);\r\n  const [drivers, setDrivers] = useState();\r\n  const [driverId, setDriverId] = useState();\r\n  const [deleteDriver] = useMutation(DELETE_DRIVER);\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setDrivers(data.drivers);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    deleteDriver({\r\n      variables: {\r\n        id: driverId,\r\n      },\r\n      refetchQueries: [\r\n        { query: GET_SUPPLIER, variables: { id: props.supplierId } },\r\n        { query: LOAD_DRIVERS },\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Delete Driver</h3>\r\n      {drivers !== undefined && (\r\n        <div>\r\n          <form id=\"del-driver\" onSubmit={handleSubmit}>\r\n            <div className=\"field\">\r\n              <label>Driver: </label>\r\n              <select\r\n                required\r\n                onChange={(e) => {\r\n                  setDriverId(e.target.value);\r\n                }}\r\n              >\r\n                <option>Select Driver</option>\r\n                {drivers.map((driver, idx) => (\r\n                  <option key={idx} value={driver.id}>\r\n                    {driver.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <button type=\"submit\">Delete Driver</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteDriver;\r\n"]},"metadata":{},"sourceType":"module"}