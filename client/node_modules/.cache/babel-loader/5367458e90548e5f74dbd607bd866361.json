{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\UpdateSupplier.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_SUPPLIERS } from \"../gql/Queries\";\nimport { UPDATE_SUPPLIER } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateSupplier = () => {\n  _s();\n\n  const {\n    data\n  } = useQuery(LOAD_SUPPLIERS);\n  const [suppliers, setSuppliers] = useState();\n  const [supplierId, setSupplierId] = useState();\n  const [name, setName] = useState();\n  const [updateSupplier] = useMutation(UPDATE_SUPPLIER);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateSupplier({\n      variables: {\n        id: supplierId,\n        name: name\n      },\n      refetchQueries: [{\n        query: LOAD_SUPPLIERS\n      }]\n    });\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      setSuppliers(data.suppliers);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Supplier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"add-supplier\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Supplier:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setSupplierId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Supplier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), suppliers !== undefined && suppliers.map((supplier, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: supplier.id,\n            children: supplier.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Supplier Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name || \"\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Supplier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateSupplier, \"p0rxZ+E15NsSvXcbQNHY0p2cTi8=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UpdateSupplier;\nexport default UpdateSupplier;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateSupplier\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/UpdateSupplier.js"],"names":["useQuery","useMutation","useEffect","useState","LOAD_SUPPLIERS","UPDATE_SUPPLIER","UpdateSupplier","data","suppliers","setSuppliers","supplierId","setSupplierId","name","setName","updateSupplier","handleSubmit","e","preventDefault","variables","id","refetchQueries","query","undefined","target","value","map","supplier","idx"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAWP,QAAQ,CAACI,cAAD,CAAzB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,cAAD,IAAmBb,WAAW,CAACI,eAAD,CAApC;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,cAAc,CAAC;AACbI,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAET,UADK;AAETE,QAAAA,IAAI,EAAEA;AAFG,OADE;AAKbQ,MAAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEjB;AAAT,OAAD;AALH,KAAD,CAAd;AAOD,GATD;;AAWAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,IAAI,KAAKe,SAAb,EAAwB;AACtBb,MAAAA,YAAY,CAACF,IAAI,CAACC,SAAN,CAAZ;AACD;AACF,GAJQ,EAIN,CAACD,IAAD,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,QAAQ,EAAEQ,YAAlC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfL,YAAAA,aAAa,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAb;AACD,WAHH;AAAA,kCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGhB,SAAS,KAAKc,SAAd,IACCd,SAAS,CAACiB,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,kBACZ;AAAkB,YAAA,KAAK,EAAED,QAAQ,CAACP,EAAlC;AAAA,sBACGO,QAAQ,CAACd;AADZ,aAAae,GAAb;AAAA;AAAA;AAAA;AAAA,kBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEf,IAAI,IAAI,EAFjB;AAGE,UAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAxDD;;GAAMlB,c;UACaN,Q,EAIQC,W;;;KALrBK,c;AA0DN,eAAeA,cAAf","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_SUPPLIERS } from \"../gql/Queries\";\r\nimport { UPDATE_SUPPLIER } from \"../gql/Mutations\";\r\n\r\nconst UpdateSupplier = () => {\r\n  const { data } = useQuery(LOAD_SUPPLIERS);\r\n  const [suppliers, setSuppliers] = useState();\r\n  const [supplierId, setSupplierId] = useState();\r\n  const [name, setName] = useState();\r\n  const [updateSupplier] = useMutation(UPDATE_SUPPLIER);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateSupplier({\r\n      variables: {\r\n        id: supplierId,\r\n        name: name,\r\n      },\r\n      refetchQueries: [{ query: LOAD_SUPPLIERS }],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setSuppliers(data.suppliers);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Update Supplier</h3>\r\n      <form id=\"add-supplier\" onSubmit={handleSubmit}>\r\n        <div className=\"field\">\r\n          <label>Supplier:</label>\r\n          <select\r\n            onChange={(e) => {\r\n              setSupplierId(e.target.value);\r\n            }}\r\n          >\r\n            <option>Select Supplier</option>\r\n            {suppliers !== undefined &&\r\n              suppliers.map((supplier, idx) => (\r\n                <option key={idx} value={supplier.id}>\r\n                  {supplier.name}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>New Supplier Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name || \"\"}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <button type=\"submit\">Update Supplier</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateSupplier;\r\n"]},"metadata":{},"sourceType":"module"}