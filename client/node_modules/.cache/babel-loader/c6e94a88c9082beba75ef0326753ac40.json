{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\OrdersList.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_ORDERS } from \"../gql/Queries\";\nimport SupplierDetails from \"./SupplierDetails\";\nimport { useRecoilState } from \"recoil\";\nimport { clickedAtom } from \"../recoil/atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrdersList = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_ORDERS);\n  const [orders, setSuppliers] = useState();\n  useEffect(() => {\n    if (data !== undefined) {\n      setOrders(data.orders);\n      console.log(data.orders);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"An error occured...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Orders: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), orders !== undefined && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map((order, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: order.vehicleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: order.driverName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrdersList, \"gGDEfpI0XJsocKcZPbR16jNWxHo=\", false, function () {\n  return [useQuery];\n});\n\n_c = OrdersList;\nexport default OrdersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersList\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/OrdersList.js"],"names":["useQuery","useEffect","useState","LOAD_ORDERS","SupplierDetails","useRecoilState","clickedAtom","OrdersList","error","loading","data","orders","setSuppliers","undefined","setOrders","console","log","map","order","idx","vehicleName","driverName"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,WAAT,QAA4B,iBAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACG,WAAD,CAAzC;AACA,QAAM,CAACQ,MAAD,EAASC,YAAT,IAAyBV,QAAQ,EAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,KAAKG,SAAb,EAAwB;AACtBC,MAAAA,SAAS,CAACJ,IAAI,CAACC,MAAN,CAAT;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,MAAjB;AACD;AACF,GALQ,EAKN,CAACD,IAAD,CALM,CAAT;AAMA,sBACE;AAAA,eACGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGD,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFZ,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGG,MAAM,KAAKE,SAAX,iBACC;AAAA,gBACGF,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACV;AAAA,gCACE;AAAA,oBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAASF,GAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;GAAMZ,U;UAC6BP,Q;;;KAD7BO,U;AA6BN,eAAeA,UAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_ORDERS } from \"../gql/Queries\";\r\nimport SupplierDetails from \"./SupplierDetails\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { clickedAtom } from \"../recoil/atoms\";\r\n\r\nconst OrdersList = () => {\r\n  const { error, loading, data } = useQuery(LOAD_ORDERS);\r\n  const [orders, setSuppliers] = useState();\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setOrders(data.orders);\r\n      console.log(data.orders);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <div>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>An error occured...</p>}\r\n      <h1>All Orders: </h1>\r\n      {orders !== undefined && (\r\n        <ul>\r\n          {orders.map((order, idx) => (\r\n            <li key={idx}>\r\n              <p>{order.vehicleName}</p>\r\n              <p>{order.driverName}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersList;\r\n"]},"metadata":{},"sourceType":"module"}