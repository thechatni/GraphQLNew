{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\UpdateVehicle.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_FLEETS, LOAD_DRIVERS, GET_SUPPLIER, LOAD_VEHICLES } from \"../gql/Queries\";\nimport { UPDATE_VEHICLE } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateVehicle = props => {\n  _s();\n\n  const [vehicles, setVehicles] = useState();\n  const [fleets, setFleets] = useState();\n  const [drivers, setDrivers] = useState();\n  const [name, setName] = useState();\n  const [fleetId, setFleetId] = useState();\n  const [vehicleId, setVehicleId] = useState();\n  const [driverId, setDriverId] = useState();\n  const [capacity, setCapacity] = useState();\n  const [price, setPrice] = useState();\n  const [available, setAvailable] = useState(true);\n  const {\n    loading: loadingF,\n    data: dataF\n  } = useQuery(LOAD_FLEETS);\n  const {\n    error: errorV,\n    loading: loadingV,\n    data: dataV\n  } = useQuery(LOAD_VEHICLES);\n  const {\n    error: errorD,\n    loading: loadingD,\n    data: dataD\n  } = useQuery(LOAD_DRIVERS);\n  const [updateVehicle] = useMutation(UPDATE_VEHICLE);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateVehicle({\n      variables: {\n        id: vehicleId,\n        name: name,\n        capacity: capacity,\n        price: price,\n        driverId: driverId,\n        fleetId: fleetId,\n        available: available\n      },\n      refetchQueries: [{\n        query: GET_SUPPLIER,\n        variables: {\n          id: props.supplierId\n        }\n      }, {\n        query: LOAD_VEHICLES\n      }]\n    });\n  };\n\n  useEffect(() => {\n    if (dataF !== undefined) {\n      console.log(dataF);\n      setFleets(dataF.fleets);\n    }\n\n    if (dataV !== undefined) {\n      setVehicles(dataV.vehicles);\n    }\n\n    if (dataD !== undefined) {\n      console.log(dataD);\n      setDrivers(dataD.drivers);\n    }\n  }, [dataF, dataD, dataV]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Vehicle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), loadingF && loadingD && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }, this) || /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"update-vehicle\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Vehicle: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setVehicleId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Vehicle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), vehicles !== undefined && vehicles.map((vehicle, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: vehicle.id,\n            children: vehicle.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Vehicle Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name || \"\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Capacity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: capacity || \"\",\n          onChange: e => setCapacity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: price || \"\",\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fleet Owner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setFleetId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Fleet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), fleets !== undefined && fleets.map((fleet, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: fleet.id,\n            children: fleet.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Driver:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setDriverId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Driver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), drivers !== undefined && drivers.map((driver, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: driver.id,\n            children: driver.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Available:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setAvailable(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Availability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: true,\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: false,\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Vehicle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateVehicle, \"SWMB/M5PEZsLA98PZXlZoALniG4=\", false, function () {\n  return [useQuery, useQuery, useQuery, useMutation];\n});\n\n_c = UpdateVehicle;\nexport default UpdateVehicle;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateVehicle\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/UpdateVehicle.js"],"names":["useQuery","useMutation","useEffect","useState","LOAD_FLEETS","LOAD_DRIVERS","GET_SUPPLIER","LOAD_VEHICLES","UPDATE_VEHICLE","UpdateVehicle","props","vehicles","setVehicles","fleets","setFleets","drivers","setDrivers","name","setName","fleetId","setFleetId","vehicleId","setVehicleId","driverId","setDriverId","capacity","setCapacity","price","setPrice","available","setAvailable","loading","loadingF","data","dataF","error","errorV","loadingV","dataV","errorD","loadingD","dataD","updateVehicle","handleSubmit","e","preventDefault","variables","id","refetchQueries","query","supplierId","undefined","console","log","target","value","map","vehicle","idx","fleet","driver"],"mappings":"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","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  LOAD_FLEETS,\r\n  LOAD_DRIVERS,\r\n  GET_SUPPLIER,\r\n  LOAD_VEHICLES,\r\n} from \"../gql/Queries\";\r\nimport { UPDATE_VEHICLE } from \"../gql/Mutations\";\r\n\r\nconst UpdateVehicle = (props) => {\r\n  const [vehicles, setVehicles] = useState();\r\n  const [fleets, setFleets] = useState();\r\n  const [drivers, setDrivers] = useState();\r\n  const [name, setName] = useState();\r\n  const [fleetId, setFleetId] = useState();\r\n  const [vehicleId, setVehicleId] = useState();\r\n  const [driverId, setDriverId] = useState();\r\n  const [capacity, setCapacity] = useState();\r\n  const [price, setPrice] = useState();\r\n  const [available, setAvailable] = useState(true);\r\n  const { loading: loadingF, data: dataF } = useQuery(LOAD_FLEETS);\r\n\r\n  const {\r\n    error: errorV,\r\n    loading: loadingV,\r\n    data: dataV,\r\n  } = useQuery(LOAD_VEHICLES);\r\n\r\n  const {\r\n    error: errorD,\r\n    loading: loadingD,\r\n    data: dataD,\r\n  } = useQuery(LOAD_DRIVERS);\r\n  const [updateVehicle] = useMutation(UPDATE_VEHICLE);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateVehicle({\r\n      variables: {\r\n        id: vehicleId,\r\n        name: name,\r\n        capacity: capacity,\r\n        price: price,\r\n        driverId: driverId,\r\n        fleetId: fleetId,\r\n        available: available,\r\n      },\r\n      refetchQueries: [\r\n        { query: GET_SUPPLIER, variables: { id: props.supplierId } },\r\n        { query: LOAD_VEHICLES },\r\n      ],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataF !== undefined) {\r\n      console.log(dataF);\r\n      setFleets(dataF.fleets);\r\n    }\r\n\r\n    if (dataV !== undefined) {\r\n      setVehicles(dataV.vehicles);\r\n    }\r\n\r\n    if (dataD !== undefined) {\r\n      console.log(dataD);\r\n      setDrivers(dataD.drivers);\r\n    }\r\n  }, [dataF, dataD, dataV]);\r\n  return (\r\n    <div>\r\n      <h3>Update Vehicle</h3>\r\n      {(loadingF && loadingD && <p>Loading...</p>) || (\r\n        <form id=\"update-vehicle\" onSubmit={handleSubmit}>\r\n          <div className=\"field\">\r\n            <label>Vehicle: </label>\r\n            <select\r\n              onChange={(e) => {\r\n                setVehicleId(e.target.value);\r\n              }}\r\n            >\r\n              <option>Select Vehicle</option>\r\n              {vehicles !== undefined &&\r\n                vehicles.map((vehicle, idx) => (\r\n                  <option key={idx} value={vehicle.id}>\r\n                    {vehicle.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>New Vehicle Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={name || \"\"}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Capacity:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={capacity || \"\"}\r\n              onChange={(e) => setCapacity(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Price:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={price || \"\"}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Fleet Owner:</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setFleetId(e.target.value);\r\n              }}\r\n            >\r\n              <option>Select Fleet</option>\r\n              {fleets !== undefined &&\r\n                fleets.map((fleet, idx) => (\r\n                  <option key={idx} value={fleet.id}>\r\n                    {fleet.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Driver:</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setDriverId(e.target.value);\r\n              }}\r\n            >\r\n              <option>Select Driver</option>\r\n              {drivers !== undefined &&\r\n                drivers.map((driver, idx) => (\r\n                  <option key={idx} value={driver.id}>\r\n                    {driver.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Available:</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setAvailable(e.target.value);\r\n              }}\r\n            >\r\n              <option>Availability</option>\r\n              <option value={true}>True</option>\r\n              <option value={false}>False</option>\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\">Update Vehicle</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateVehicle;\r\n"]},"metadata":{},"sourceType":"module"}