{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_AUTHORS } from \"../gql/Queries\";\nimport { ADD_BOOK } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddBook = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_AUTHORS);\n  const [authors, setAuthors] = useState();\n  const [bookname, setBookname] = useState();\n  const [genre, setGenre] = useState();\n  const [authorId, setAuthorId] = useState();\n  const [addBook] = useMutation(ADD_BOOK);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addBook({\n      variables: {\n        name: bookname,\n        genre: genre,\n        authorId: authorId\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      setAuthors(data.authors);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this) || /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"add-book\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Book name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: bookname || '',\n          onChange: e => setBookname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: genre,\n          onChange: e => {\n            setGenre(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setAuthorId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Select Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), authors != undefined && authors.map((author, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: author.id,\n            children: author.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddBook, \"W8WD7eaYt1nZtF4RhS+1d7nvvu0=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AddBook;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/AddBook.js"],"names":["useQuery","useMutation","useEffect","useState","LOAD_AUTHORS","ADD_BOOK","AddBook","error","loading","data","authors","setAuthors","bookname","setBookname","genre","setGenre","authorId","setAuthorId","addBook","handleSubmit","e","preventDefault","variables","name","undefined","target","value","map","author","idx","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACI,YAAD,CAAzC;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,EAAxC;AAEA,QAAM,CAACe,OAAD,IAAYjB,WAAW,CAACI,QAAD,CAA7B;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,CAAC;AACNI,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAEX,QADG;AAETE,QAAAA,KAAK,EAAEA,KAFE;AAGTE,QAAAA,QAAQ,EAAEA;AAHD;AADL,KAAD,CAAP;AAOD,GATD;;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAI,KAAKe,SAAb,EAAwB;AACtBb,MAAAA,UAAU,CAACF,IAAI,CAACC,OAAN,CAAV;AACD;AACF,GAJQ,EAIN,CAACD,IAAD,CAJM,CAAT;AAKA,sBACE;AAAA,cACID,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,iBACC;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,QAAQ,EAAEW,YAA9B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEP,QAAQ,IAAI,EAFrB;AAGE,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACK,MAAF,CAASC,KAAV;AAH9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEZ,KAFT;AAGE,UAAA,QAAQ,EAAGM,CAAD,IAAO;AACfL,YAAAA,QAAQ,CAACK,CAAC,CAACK,MAAF,CAASC,KAAV,CAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAuBE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGN,CAAD,IAAO;AACfH,YAAAA,WAAW,CAACG,CAAC,CAACK,MAAF,CAASC,KAAV,CAAX;AACD,WAHH;AAAA,kCAKE;AAAQ,YAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGhB,OAAO,IAAIc,SAAX,IACCd,OAAO,CAACiB,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,kBACV;AAAkB,YAAA,KAAK,EAAED,MAAM,CAACE,EAAhC;AAAA,sBACGF,MAAM,CAACL;AADV,aAAaM,GAAb;AAAA;AAAA;AAAA;AAAA,kBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,eAwCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CA1ED;;GAAMvB,O;UAC6BN,Q,EAOfC,W;;;KARdK,O;AA4EN,eAAeA,OAAf","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_AUTHORS } from \"../gql/Queries\";\r\nimport { ADD_BOOK } from \"../gql/Mutations\";\r\n\r\nconst AddBook = () => {\r\n  const { error, loading, data } = useQuery(LOAD_AUTHORS);\r\n\r\n  const [authors, setAuthors] = useState();\r\n  const [bookname, setBookname] = useState();\r\n  const [genre, setGenre] = useState();\r\n  const [authorId, setAuthorId] = useState();\r\n\r\n  const [addBook] = useMutation(ADD_BOOK);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addBook({\r\n      variables: {\r\n        name: bookname,\r\n        genre: genre,\r\n        authorId: authorId,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setAuthors(data.authors);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <div>\r\n      {(loading && <p>Loading...</p>) || (\r\n        <form id=\"add-book\" onSubmit={handleSubmit}>\r\n          <div className=\"field\">\r\n            <label>Book name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={bookname || ''}\r\n              onChange={(e) => setBookname(e.target.value)}\r\n            ></input>\r\n            {/* {bookname} */}\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Genre:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={genre}\r\n              onChange={(e) => {\r\n                setGenre(e.target.value);\r\n              }}\r\n            ></input>\r\n            {/* {genre} */}\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Author:</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setAuthorId(e.target.value);\r\n              }}\r\n            >\r\n              <option disabled>Select Author</option>\r\n              {authors != undefined &&\r\n                authors.map((author, idx) => (\r\n                  <option key={idx} value={author.id}>\r\n                    {author.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\">+</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBook;\r\n"]},"metadata":{},"sourceType":"module"}