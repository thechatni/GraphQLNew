{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_AUTHORS } from \"../gql/Queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddBook = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_AUTHORS);\n  const [authors, setAuthors] = useState();\n  const [bookname, setBookname] = useState();\n  const [genre, setGenre] = useState();\n  useEffect(() => {\n    if (data !== undefined) {\n      setAuthors(data.authors);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 20\n    }, this) || /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"add-book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Book name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: bookname,\n          onChange: e => {\n            setBookname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), bookname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: genre,\n          onChange: e => {\n            setGenre(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setGenre(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Select Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), authors != undefined && authors.map((author, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: author.id,\n            children: author.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddBook, \"kysTDac9K47l+lU49Wvy91nEFcg=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddBook;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/AddBook.js"],"names":["useQuery","useEffect","useState","LOAD_AUTHORS","AddBook","error","loading","data","authors","setAuthors","bookname","setBookname","genre","setGenre","undefined","e","target","value","map","author","idx","id","name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,YAAD,CAAzC;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,IAAI,KAAKO,SAAb,EAAwB;AACtBL,MAAAA,UAAU,CAACF,IAAI,CAACC,OAAN,CAAV;AACD;AACF,GAJQ,EAIN,CAACD,IAAD,CAJM,CAAT;AAKA,sBACE;AAAA,cACID,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,iBACC;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEI,QAFT;AAGE,UAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,YAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBAFF,EASGP,QATH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEE,KAFT;AAGE,UAAA,QAAQ,EAAGG,CAAD,IAAO;AACfF,YAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBAFF,EASGL,KATH;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAyBE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGG,CAAD,IAAO;AACfF,YAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,WAHH;AAAA,kCAKE;AAAQ,YAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGT,OAAO,IAAIM,SAAX,IACCN,OAAO,CAACU,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,kBACV;AAAkB,YAAA,KAAK,EAAED,MAAM,CAACE,EAAhC;AAAA,sBACGF,MAAM,CAACG;AADV,aAAaF,GAAb;AAAA;AAAA;AAAA;AAAA,kBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CA7DD;;GAAMhB,O;UAC6BJ,Q;;;KAD7BI,O;AA+DN,eAAeA,OAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_AUTHORS } from \"../gql/Queries\";\r\n\r\nconst AddBook = () => {\r\n  const { error, loading, data } = useQuery(LOAD_AUTHORS);\r\n\r\n  const [authors, setAuthors] = useState();\r\n  const [bookname, setBookname] = useState();\r\n  const [genre, setGenre] = useState();\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setAuthors(data.authors);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <div>\r\n      {(loading && <p>Loading...</p>) || (\r\n        <form id=\"add-book\">\r\n          <div className=\"field\">\r\n            <label>Book name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={bookname}\r\n              onChange={(e) => {\r\n                setBookname(e.target.value);\r\n              }}\r\n            />\r\n            {bookname}\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Genre:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={genre}\r\n              onChange={(e) => {\r\n                setGenre(e.target.value);\r\n              }}\r\n            />\r\n            {genre}\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Author:</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setGenre(e.target.value);\r\n              }}\r\n            >\r\n              <option disabled>Select Author</option>\r\n              {authors != undefined &&\r\n                authors.map((author, idx) => (\r\n                  <option key={idx} value={author.id}>\r\n                    {author.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button>+</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBook;\r\n"]},"metadata":{},"sourceType":"module"}