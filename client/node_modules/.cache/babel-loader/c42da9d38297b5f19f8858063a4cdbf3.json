{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\BookList.js\",\n    _s = $RefreshSig$();\n\nimport { gql } from \"@apollo/client\";\nimport { graphql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBooksQuery = gql`\n  {\n    books {\n      name\n    }\n  }\n`;\n\nfunction ExchangeRates() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this); //   return data.rates.map(({ currency, rate }) => (\n  //     <div key={currency}>\n  //       <p>\n  //         {currency}: {rate}\n  //       </p>\n  //     </div>\n  //   ));\n\n  console.log(data);\n}\n\n_s(ExchangeRates, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", true);\n\n_c = ExchangeRates;\n\nconst BookList = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"book-list\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Book name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = BookList;\nexport default graphql(getBooksQuery)(BookList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExchangeRates\");\n$RefreshReg$(_c2, \"BookList\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/BookList.js"],"names":["gql","graphql","getBooksQuery","ExchangeRates","loading","error","data","useQuery","console","log","BookList"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,SAASG,aAAT,GAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BC,QAAQ,CAACL,aAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAJY,CAMvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;;GAfQH,a;;KAAAA,a;;AAiBT,MAAMO,QAAQ,GAAG,MAAM;AACrB,sBACE;AAAA,2BACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;MAAMA,Q;AAUN,eAAeT,OAAO,CAACC,aAAD,CAAP,CAAuBQ,QAAvB,CAAf","sourcesContent":["import { gql } from \"@apollo/client\";\r\nimport { graphql } from \"@apollo/client\";\r\n\r\nconst getBooksQuery = gql`\r\n  {\r\n    books {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ExchangeRates() {\r\n  const { loading, error, data } = useQuery(getBooksQuery);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  //   return data.rates.map(({ currency, rate }) => (\r\n  //     <div key={currency}>\r\n  //       <p>\r\n  //         {currency}: {rate}\r\n  //       </p>\r\n  //     </div>\r\n  //   ));\r\n\r\n  console.log(data);\r\n}\r\n\r\nconst BookList = () => {\r\n  return (\r\n    <div>\r\n      <ul id=\"book-list\">\r\n        <li>Book name</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n"]},"metadata":{},"sourceType":"module"}