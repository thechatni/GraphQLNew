{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\AddVehicle.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_FLEETS, LOAD_DRIVERS, GET_SUPPLIER } from \"../gql/Queries\";\nimport { ADD_VEHICLE } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddVehicle = () => {\n  _s();\n\n  const [fleets, setFleets] = useState();\n  const [drivers, setDrivers] = useState();\n  const [name, setName] = useState();\n  const [fleetId, setFleetId] = useState();\n  const [driverId, setDriverId] = useState();\n  const [capacity, setCapacity] = useState();\n  const [price, setPrice] = useState();\n  const [available, setAvailable] = useState();\n  const {\n    error: errorF,\n    loading: loadingF,\n    data: dataF\n  } = useQuery(LOAD_FLEETS);\n  const {\n    error: errorD,\n    loading: loadingD,\n    data: dataD\n  } = useQuery(LOAD_DRIVERS); // const [addFleet] = useMutation(ADD_FLEET);\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   addFleet({\n  //     variables: {\n  //       name: name,\n  //       supplierId: supplierId,\n  //     },\n  //     refetchQueries: [{ query: GET_SUPPLIER, variables: { id: supplierId } }],\n  //   });\n  // };\n\n  useEffect(() => {\n    if (dataF !== undefined) {\n      console.log(dataF);\n      setFleets(dataF.fleets);\n    }\n\n    if (dataF !== undefined) {\n      console.log(dataF);\n      setFleets(dataF.fleets);\n    } // if (dataD !== undefined) {\n    // console.log(dataD);\n    // }\n\n  }, [dataF, dataD]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddVehicle, \"8rAwuH/FmwixGGasgaHWZaJ5F4c=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = AddVehicle;\nexport default AddVehicle;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVehicle\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/AddVehicle.js"],"names":["useQuery","useMutation","useEffect","useState","LOAD_FLEETS","LOAD_DRIVERS","GET_SUPPLIER","ADD_VEHICLE","AddVehicle","fleets","setFleets","drivers","setDrivers","name","setName","fleetId","setFleetId","driverId","setDriverId","capacity","setCapacity","price","setPrice","available","setAvailable","error","errorF","loading","loadingF","data","dataF","errorD","loadingD","dataD","undefined","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,QAAwD,gBAAxD;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,EAAxC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,EAA1C;AACA,QAAM;AACJsB,IAAAA,KAAK,EAAEC,MADH;AAEJC,IAAAA,OAAO,EAAEC,QAFL;AAGJC,IAAAA,IAAI,EAAEC;AAHF,MAIF9B,QAAQ,CAACI,WAAD,CAJZ;AAKA,QAAM;AACJqB,IAAAA,KAAK,EAAEM,MADH;AAEJJ,IAAAA,OAAO,EAAEK,QAFL;AAGJH,IAAAA,IAAI,EAAEI;AAHF,MAIFjC,QAAQ,CAACK,YAAD,CAJZ,CAduB,CAmBvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,KAAK,KAAKI,SAAd,EAAyB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACApB,MAAAA,SAAS,CAACoB,KAAK,CAACrB,MAAP,CAAT;AACD;;AAED,QAAIqB,KAAK,KAAKI,SAAd,EAAyB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACApB,MAAAA,SAAS,CAACoB,KAAK,CAACrB,MAAP,CAAT;AACD,KATa,CAUd;AACA;AACA;;AACD,GAbQ,EAaN,CAACqB,KAAD,EAAQG,KAAR,CAbM,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAlFD;;GAAMzB,U;UAaAR,Q,EAKAA,Q;;;KAlBAQ,U;AAoFN,eAAeA,UAAf","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_FLEETS, LOAD_DRIVERS, GET_SUPPLIER } from \"../gql/Queries\";\r\nimport { ADD_VEHICLE } from \"../gql/Mutations\";\r\n\r\nconst AddVehicle = () => {\r\n  const [fleets, setFleets] = useState();\r\n  const [drivers, setDrivers] = useState();\r\n  const [name, setName] = useState();\r\n  const [fleetId, setFleetId] = useState();\r\n  const [driverId, setDriverId] = useState();\r\n  const [capacity, setCapacity] = useState();\r\n  const [price, setPrice] = useState();\r\n  const [available, setAvailable] = useState();\r\n  const {\r\n    error: errorF,\r\n    loading: loadingF,\r\n    data: dataF,\r\n  } = useQuery(LOAD_FLEETS);\r\n  const {\r\n    error: errorD,\r\n    loading: loadingD,\r\n    data: dataD,\r\n  } = useQuery(LOAD_DRIVERS);\r\n  // const [addFleet] = useMutation(ADD_FLEET);\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   addFleet({\r\n  //     variables: {\r\n  //       name: name,\r\n  //       supplierId: supplierId,\r\n  //     },\r\n  //     refetchQueries: [{ query: GET_SUPPLIER, variables: { id: supplierId } }],\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (dataF !== undefined) {\r\n      console.log(dataF);\r\n      setFleets(dataF.fleets);\r\n    }\r\n\r\n    if (dataF !== undefined) {\r\n      console.log(dataF);\r\n      setFleets(dataF.fleets);\r\n    }\r\n    // if (dataD !== undefined) {\r\n    // console.log(dataD);\r\n    // }\r\n  }, [dataF, dataD]);\r\n  return (\r\n    <div>\r\n      {/* <h3>Add Fleet Owner</h3>\r\n      {(loading && <p>Loading...</p>) || (\r\n        <form id=\"add-fleet\" onSubmit={handleSubmit}>\r\n          <div className=\"field\">\r\n            <label>Fleet Owner Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name || \"\"}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Supplier:</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setSupplierId(e.target.value);\r\n              }}\r\n            >\r\n              <option>Select Supplier</option>\r\n              {suppliers != undefined &&\r\n                suppliers.map((supplier, idx) => (\r\n                  <option key={idx} value={supplier.id}>\r\n                    {supplier.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\">Add Fleet Owner</button>\r\n        </form>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVehicle;\r\n"]},"metadata":{},"sourceType":"module"}