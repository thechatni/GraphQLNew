{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\DeleteVehicle.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_VEHICLES, GET_SUPPLIER } from \"../gql/Queries\";\nimport { DELETE_VEHICLE } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteVehicle = props => {\n  _s();\n\n  const {\n    data\n  } = useQuery(LOAD_VEHICLES);\n  const [vehicles, setVehicles] = useState();\n  const [vehicleId, setVehicleId] = useState();\n  const [deleteVehicle] = useMutation(DELETE_VEHICLE);\n  useEffect(() => {\n    if (data !== undefined) {\n      setVehicles(data.vehicles);\n    }\n  }, [data]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    deleteVehicle({\n      variables: {\n        id: vehicleId\n      },\n      refetchQueries: [{\n        query: GET_SUPPLIER,\n        variables: {\n          id: props.supplierId\n        }\n      }, {\n        query: LOAD_VEHICLES\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Delete Vehicle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), vehicles !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"del-vehicle\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Vehicle: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: true,\n            onChange: e => {\n              setVehicleId(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select Vehicle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), vehicles.map((vehicle, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: vehicle.id,\n              children: vehicle.name\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Delete Vehicle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeleteVehicle, \"NAkZOfl15dAvjXwUy27H3y34n74=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = DeleteVehicle;\nexport default DeleteVehicle;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteVehicle\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/DeleteVehicle.js"],"names":["useQuery","useMutation","useEffect","useState","LOAD_VEHICLES","GET_SUPPLIER","DELETE_VEHICLE","DeleteVehicle","props","data","vehicles","setVehicles","vehicleId","setVehicleId","deleteVehicle","undefined","handleSubmit","e","preventDefault","variables","id","refetchQueries","query","supplierId","target","value","map","vehicle","idx","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,gBAA5C;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAWT,QAAQ,CAACI,aAAD,CAAzB;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AACA,QAAM,CAACW,aAAD,IAAkBb,WAAW,CAACK,cAAD,CAAnC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAI,KAAKM,SAAb,EAAwB;AACtBJ,MAAAA,WAAW,CAACF,IAAI,CAACC,QAAN,CAAX;AACD;AACF,GAJQ,EAIN,CAACD,IAAD,CAJM,CAAT;;AAMA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,aAAa,CAAC;AACZK,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAER;AADK,OADC;AAIZS,MAAAA,cAAc,EAAE,CACd;AAAEC,QAAAA,KAAK,EAAEjB,YAAT;AAAuBc,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAEZ,KAAK,CAACe;AAAZ;AAAlC,OADc,EAEd;AAAED,QAAAA,KAAK,EAAElB;AAAT,OAFc;AAJJ,KAAD,CAAb;AASD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,QAAQ,KAAKK,SAAb,iBACC;AAAA,6BACE;AAAM,QAAA,EAAE,EAAC,aAAT;AAAuB,QAAA,QAAQ,EAAEC,YAAjC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,QAAQ,EAAGC,CAAD,IAAO;AACfJ,cAAAA,YAAY,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAAZ;AACD,aAJH;AAAA,oCAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOGf,QAAQ,CAACgB,GAAT,CAAa,CAACC,OAAD,EAAUC,GAAV,kBACZ;AAAkB,cAAA,KAAK,EAAED,OAAO,CAACP,EAAjC;AAAA,wBACGO,OAAO,CAACE;AADX,eAAaD,GAAb;AAAA;AAAA;AAAA;AAAA,oBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtDD;;GAAMrB,a;UACaP,Q,EAGOC,W;;;KAJpBM,a;AAwDN,eAAeA,aAAf","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_VEHICLES, GET_SUPPLIER } from \"../gql/Queries\";\r\nimport { DELETE_VEHICLE } from \"../gql/Mutations\";\r\n\r\nconst DeleteVehicle = (props) => {\r\n  const { data } = useQuery(LOAD_VEHICLES);\r\n  const [vehicles, setVehicles] = useState();\r\n  const [vehicleId, setVehicleId] = useState();\r\n  const [deleteVehicle] = useMutation(DELETE_VEHICLE);\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setVehicles(data.vehicles);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    deleteVehicle({\r\n      variables: {\r\n        id: vehicleId,\r\n      },\r\n      refetchQueries: [\r\n        { query: GET_SUPPLIER, variables: { id: props.supplierId } },\r\n        { query: LOAD_VEHICLES },\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Delete Vehicle</h3>\r\n      {vehicles !== undefined && (\r\n        <div>\r\n          <form id=\"del-vehicle\" onSubmit={handleSubmit}>\r\n            <div className=\"field\">\r\n              <label>Vehicle: </label>\r\n              <select\r\n                required\r\n                onChange={(e) => {\r\n                  setVehicleId(e.target.value);\r\n                }}\r\n              >\r\n                <option>Select Vehicle</option>\r\n                {vehicles.map((vehicle, idx) => (\r\n                  <option key={idx} value={vehicle.id}>\r\n                    {vehicle.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <button type=\"submit\">Delete Vehicle</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteVehicle;\r\n"]},"metadata":{},"sourceType":"module"}