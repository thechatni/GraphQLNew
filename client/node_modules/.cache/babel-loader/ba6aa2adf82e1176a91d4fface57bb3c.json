{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\UpdateDriver.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useState, useEffect } from \"react\";\nimport { LOAD_DRIVERS } from \"../gql/Queries\";\nimport { UPDATE_DRIVER } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateDriver = () => {\n  _s();\n\n  const [driverId, setDriverId] = useState();\n  const [drivers, setDrivers] = useState();\n  const {\n    data\n  } = useQuery(LOAD_DRIVERS);\n  const [name, setName] = useState();\n  const [available, setAvailable] = useState(true);\n  const [updateDriver] = useMutation(UPDATE_DRIVER);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateDriver({\n      variables: {\n        id: driverId,\n        name: name,\n        available: available\n      },\n      refetchQueries: [{\n        query: LOAD_DRIVERS\n      }]\n    });\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      setDrivers(data.drivers);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Driver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"update-driver\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Driver: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setDriverId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Driver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), drivers !== undefined && drivers.map((driver, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: driver.id,\n            children: driver.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Driver name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name || \"\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Available:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setAvailable(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Availability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: true,\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: false,\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateDriver, \"C+X/IThKYpeIqnaoHoiA7DYBxg4=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UpdateDriver;\nexport default UpdateDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateDriver\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/UpdateDriver.js"],"names":["useQuery","useMutation","useState","useEffect","LOAD_DRIVERS","UPDATE_DRIVER","UpdateDriver","driverId","setDriverId","drivers","setDrivers","data","name","setName","available","setAvailable","updateDriver","handleSubmit","e","preventDefault","variables","id","refetchQueries","query","undefined","target","value","map","driver","idx"],"mappings":"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","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { LOAD_DRIVERS } from \"../gql/Queries\";\r\nimport { UPDATE_DRIVER } from \"../gql/Mutations\";\r\n\r\nconst UpdateDriver = () => {\r\n  const [driverId, setDriverId] = useState();\r\n  const [drivers, setDrivers] = useState();\r\n  const { data } = useQuery(LOAD_DRIVERS);\r\n  const [name, setName] = useState();\r\n  const [available, setAvailable] = useState(true);\r\n\r\n  const [updateDriver] = useMutation(UPDATE_DRIVER);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateDriver({\r\n      variables: {\r\n        id: driverId,\r\n        name: name,\r\n        available: available,\r\n      },\r\n      refetchQueries: [{ query: LOAD_DRIVERS }],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setDrivers(data.drivers);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Update Driver</h3>\r\n      <form id=\"update-driver\" onSubmit={handleSubmit}>\r\n        <div className=\"field\">\r\n          <label>Driver: </label>\r\n          <select\r\n            onChange={(e) => {\r\n              setDriverId(e.target.value);\r\n            }}\r\n          >\r\n            <option>Select Driver</option>\r\n            {drivers !== undefined &&\r\n              drivers.map((driver, idx) => (\r\n                \r\n                <option key={idx} value={driver.id}>\r\n                  {driver.name}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Driver name: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={name || \"\"}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></input>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label>Available:</label>\r\n          <select\r\n            onChange={(e) => {\r\n              setAvailable(e.target.value);\r\n            }}\r\n          >\r\n            <option>Availability</option>\r\n            <option value={true}>True</option>\r\n            <option value={false}>False</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Update Driver</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateDriver;\r\n"]},"metadata":{},"sourceType":"module"}