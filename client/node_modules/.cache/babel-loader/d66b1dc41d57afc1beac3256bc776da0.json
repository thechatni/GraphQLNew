{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Ahmad\\\\Documents\\\\GitHub\\\\graphql\\\\GraphQL\\\\client\\\\src\\\\components\\\\UpdateFleet.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { LOAD_SUPPLIERS, GET_SUPPLIER, LOAD_FLEETS } from \"../gql/Queries\";\nimport { UPDATE_FLEET } from \"../gql/Mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateFleet = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_SUPPLIERS);\n  const {\n    error: errorF,\n    loading: loadingF,\n    data: dataF\n  } = useQuery(LOAD_FLEETS);\n  const [fleets, setFleets] = useState();\n  const [suppliers, setSuppliers] = useState();\n  const [name, setName] = useState();\n  const [supplierId, setSupplierId] = useState();\n  const [fleetId, setFleetId] = useState();\n  const [updateFleet] = useMutation(UPDATE_FLEET);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateFleet({\n      variables: {\n        name: name,\n        supplierId: supplierId\n      },\n      refetchQueries: [{\n        query: GET_SUPPLIER,\n        variables: {\n          id: supplierId\n        }\n      }, {\n        query: LOAD_FLEETS\n      }]\n    });\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      setSuppliers(data.fleets);\n    }\n\n    if (dataF !== undefined) {\n      setFleets(dataF.fleets);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Fleet Owner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this) || /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"update-fleet\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fleet: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setFleetId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Fleet Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), fleets != undefined && fleets.map((fleet, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: fleet.id,\n            children: fleet.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Fleet Owner Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name || \"\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Supplier:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setSupplierId(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Supplier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), suppliers != undefined && suppliers.map((supplier, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: supplier.id,\n            children: supplier.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Fleet Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateFleet, \"8aJVLw0yVOmudXV2yS9OIgK0FEw=\", false, function () {\n  return [useQuery, useQuery, useMutation];\n});\n\n_c = UpdateFleet;\nexport default UpdateFleet;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateFleet\");","map":{"version":3,"sources":["C:/Users/Fahad Ahmad/Documents/GitHub/graphql/GraphQL/client/src/components/UpdateFleet.js"],"names":["useQuery","useMutation","useEffect","useState","LOAD_SUPPLIERS","GET_SUPPLIER","LOAD_FLEETS","UPDATE_FLEET","UpdateFleet","error","loading","data","errorF","loadingF","dataF","fleets","setFleets","suppliers","setSuppliers","name","setName","supplierId","setSupplierId","fleetId","setFleetId","updateFleet","handleSubmit","e","preventDefault","variables","refetchQueries","query","id","undefined","target","value","map","fleet","idx","supplier"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,WAAvC,QAA0D,gBAA1D;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACI,cAAD,CAAzC;AACA,QAAM;AACJK,IAAAA,KAAK,EAAEG,MADH;AAEJF,IAAAA,OAAO,EAAEG,QAFL;AAGJF,IAAAA,IAAI,EAAEG;AAHF,MAIFd,QAAQ,CAACM,WAAD,CAJZ;AAKA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,EAA1C;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,EAAhC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,EAA5C;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,EAAtC;AAEA,QAAM,CAACsB,WAAD,IAAgBxB,WAAW,CAACM,YAAD,CAAjC;;AAEA,QAAMmB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAAC;AACVI,MAAAA,SAAS,EAAE;AACTV,QAAAA,IAAI,EAAEA,IADG;AAETE,QAAAA,UAAU,EAAEA;AAFH,OADD;AAKVS,MAAAA,cAAc,EAAE,CACd;AAAEC,QAAAA,KAAK,EAAE1B,YAAT;AAAuBwB,QAAAA,SAAS,EAAE;AAAEG,UAAAA,EAAE,EAAEX;AAAN;AAAlC,OADc,EAEd;AAAEU,QAAAA,KAAK,EAAEzB;AAAT,OAFc;AALN,KAAD,CAAX;AAUD,GAZD;;AAcAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,KAAKsB,SAAb,EAAwB;AACtBf,MAAAA,YAAY,CAACP,IAAI,CAACI,MAAN,CAAZ;AACD;;AACD,QAAID,KAAK,KAAKmB,SAAd,EAAyB;AACvBjB,MAAAA,SAAS,CAACF,KAAK,CAACC,MAAP,CAAT;AACD;AACF,GAPQ,EAON,CAACJ,IAAD,CAPM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEID,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,iBACC;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,QAAQ,EAAEgB,YAAlC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfH,YAAAA,UAAU,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CAAV;AACD,WAHH;AAAA,kCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGpB,MAAM,IAAIkB,SAAV,IACClB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACT;AAAkB,YAAA,KAAK,EAAED,KAAK,CAACL,EAA/B;AAAA,sBACGK,KAAK,CAAClB;AADT,aAAamB,GAAb;AAAA;AAAA;AAAA;AAAA,kBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEnB,IAAI,IAAI,EAFjB;AAGE,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACO,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eA0BE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGR,CAAD,IAAO;AACfL,YAAAA,aAAa,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAb;AACD,WAHH;AAAA,kCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGlB,SAAS,IAAIgB,SAAb,IACChB,SAAS,CAACmB,GAAV,CAAc,CAACG,QAAD,EAAWD,GAAX,kBACZ;AAAkB,YAAA,KAAK,EAAEC,QAAQ,CAACP,EAAlC;AAAA,sBACGO,QAAQ,CAACpB;AADZ,aAAamB,GAAb;AAAA;AAAA;AAAA;AAAA,kBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,eA2CE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CAzFD;;GAAM9B,W;UAC6BR,Q,EAK7BA,Q,EAOkBC,W;;;KAblBO,W;AA2FN,eAAeA,WAAf","sourcesContent":["import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LOAD_SUPPLIERS, GET_SUPPLIER, LOAD_FLEETS } from \"../gql/Queries\";\r\nimport { UPDATE_FLEET } from \"../gql/Mutations\";\r\n\r\nconst UpdateFleet = () => {\r\n  const { error, loading, data } = useQuery(LOAD_SUPPLIERS);\r\n  const {\r\n    error: errorF,\r\n    loading: loadingF,\r\n    data: dataF,\r\n  } = useQuery(LOAD_FLEETS);\r\n  const [fleets, setFleets] = useState();\r\n  const [suppliers, setSuppliers] = useState();\r\n  const [name, setName] = useState();\r\n  const [supplierId, setSupplierId] = useState();\r\n  const [fleetId, setFleetId] = useState();\r\n\r\n  const [updateFleet] = useMutation(UPDATE_FLEET);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateFleet({\r\n      variables: {\r\n        name: name,\r\n        supplierId: supplierId,\r\n      },\r\n      refetchQueries: [\r\n        { query: GET_SUPPLIER, variables: { id: supplierId } },\r\n        { query: LOAD_FLEETS },\r\n      ],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setSuppliers(data.fleets);\r\n    }\r\n    if (dataF !== undefined) {\r\n      setFleets(dataF.fleets);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <div>\r\n      <h3>Update Fleet Owner</h3>\r\n      {(loading && <p>Loading...</p>) || (\r\n        <form id=\"update-fleet\" onSubmit={handleSubmit}>\r\n          <div className=\"field\">\r\n            <label>Fleet: </label>\r\n            <select\r\n              onChange={(e) => {\r\n                setFleetId(e.target.value);\r\n              }}\r\n            >\r\n              <option>Select Fleet Owner</option>\r\n              {fleets != undefined &&\r\n                fleets.map((fleet, idx) => (\r\n                  <option key={idx} value={fleet.id}>\r\n                    {fleet.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>New Fleet Owner Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name || \"\"}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"field\">\r\n            <label>Supplier:</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setSupplierId(e.target.value);\r\n              }}\r\n            >\r\n              <option>Select Supplier</option>\r\n              {suppliers != undefined &&\r\n                suppliers.map((supplier, idx) => (\r\n                  <option key={idx} value={supplier.id}>\r\n                    {supplier.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\">Update Fleet Owner</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateFleet;\r\n"]},"metadata":{},"sourceType":"module"}